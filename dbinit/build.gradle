description = "Database initializer"
apply plugin: libs.plugins.liquibase.get().pluginId

import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage

def dockerImageName = "${project.group}/yona-mariadb-liquibase-update"

dependencies {
	implementation project(":core")
	implementation libs.spring.batch.core
	runtimeClasspath libs.mariadb.client
	liquibaseRuntime libs.liquibase.core
	liquibaseRuntime libs.picocli
	liquibaseRuntime libs.mariadb.client
}

docker {
	registryCredentials {
		username = project.hasProperty("dockerHubUserName") ? project.dockerHubUserName : null
		password = project.hasProperty("dockerHubPassword") ? project.dockerHubPassword : null
	}
	url = project.hasProperty("dockerUrl") ? project.dockerUrl : "http://localhost:2375"
}

task buildDockerImage(type: DockerBuildImage) {
	inputDir = mkdir("build/docker")
	images = ["${dockerImageName}:${project.ext.docker_tag}"]
	doFirst {
		copy {
			from "data"
			into "$inputDir.asFile.orNull/json"
		}
		copy {
			from "src/main/liquibase"
			into "$inputDir.asFile.orNull/changelogs"
			exclude "liquibase-task.properties"
		}
		copy {
			from "src/main/docker/Dockerfile"
			from "src/main/docker/update.sh"
			into inputDir
		}
	}
}

task pushDockerImage(type: DockerPushImage, dependsOn: buildDockerImage) {
	images = ["${dockerImageName}:${project.ext.docker_tag}"]
}

task pathingJar(type: Jar) {
	dependsOn configurations.runtimeClasspath
	appendix = 'pathing'
	doFirst {
		manifest {
			attributes "Class-Path": configurations.runtimeClasspath.files.collect {
				it.toURL().toString().replaceFirst(/file:\/+/, '/')
			}.join(' ')
		}
	}
}

bootRun {
	dependsOn pathingJar
	doFirst {
		classpath = files(sourceSets.main.output.files, pathingJar.archivePath)
	}
	enableAssertions = true
}

bootJar {
	classifier = "full"
}

liquibase {
	activities {
		main {
			changelogFile 'dbinit/src/main/liquibase/changelog.yml'
			url "$System.env.YONA_DB_URL"
			username "$System.env.YONA_DB_USER_NAME"
			password "$System.env.YONA_DB_PASSWORD"
			logLevel "info"
		}
	}
}
