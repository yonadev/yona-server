configurations {
	liquibase
}

dependencies {
	liquibase "org.liquibase.ext:liquibase-hibernate5:3.7"
}

//loading properties file.
Properties liquibaseProps = new Properties()
liquibaseProps.load(new FileInputStream("dbinit/src/main/liquibase/liquibase-task.properties"))

Properties applicationProps = new Properties()
applicationProps.load(new FileInputStream("core/src/main/resources/application.properties"))

String databaseUrl = "$System.env.YONA_DB_URL"
String hibernateUrl = "hibernate:spring:" + liquibaseProps.getProperty("liquibase.domain.package") \
	+ "?dialect=" + applicationProps.getProperty("spring.jpa.database-platform") \
	+ "&hibernate.physical_naming_strategy=" + liquibaseProps.getProperty("liquibase.physical_naming_strategy")
String userName = "$System.env.YONA_DB_USER_NAME"
String password = "$System.env.YONA_DB_PASSWORD"
String jdbcDriver = liquibaseProps.getProperty("liquibase.jdbc.driver")

String changeLogPath = liquibaseProps.getProperty("liquibase.changelog.path")

task liquibasePathingJar(type: Jar) {
	dependsOn configurations.liquibase
	appendix = 'pathing'
	doFirst {
		manifest {
			attributes "Class-Path": (configurations.runtime.files + configurations.liquibase.files).collect {
				it.toURL().toString().replaceFirst(/file:\/+/, '/')
			}.join(' ')
		}
	}
}

task liquibaseGenerateChangeLogFromCode(type: JavaExec) {
	group = "liquibase"
	dependsOn liquibasePathingJar

	classpath = files(liquibasePathingJar.archivePath)
	main = "liquibase.integration.commandline.Main"

	args "--changeLogFile=${changeLogPath}/base/entity.yml"
	args "--url=${hibernateUrl}"
	args "--logLevel=info"
	args "generateChangeLog"
}

task liquibaseGenerateChangeLogFromDB(type: JavaExec) {
	group = "liquibase"
	dependsOn liquibasePathingJar

	classpath = files(liquibasePathingJar.archivePath)
	main = "liquibase.integration.commandline.Main"

	args "--changeLogFile=${changeLogPath}/base/batch.yml"
	args "--url=${databaseUrl}"
	args "--username=${userName}"
	args "--password=${password}"
	args "--driver=${jdbcDriver}"
	args "--logLevel=info"
	args "generateChangeLog"
}

task liquibaseDiffChangelog(type: JavaExec) {
	group = "liquibase"
	dependsOn liquibasePathingJar

	workingDir = "${changeLogPath}"

	classpath = files(liquibasePathingJar.archivePath)
	main = "liquibase.integration.commandline.Main"

	args "--changeLogFile=updates/changelog-0000-yd-000.yml"
	args "--referenceUrl=${hibernateUrl}"
	args "--url=${databaseUrl}"
	args "--driver=${jdbcDriver}"
	args "--username=${userName}"
	args "--password=${password}"
	args "--logLevel=info"
	args "diffChangeLog"
	args "--excludeObjects=" + liquibaseProps.getProperty("liquibase.diff.excludeObjects")
}

task liquibaseUpdate(type: JavaExec) {
	group = "liquibase"
	dependsOn liquibasePathingJar

	workingDir = "${changeLogPath}"

	classpath = files(liquibasePathingJar.archivePath)
	main = "liquibase.integration.commandline.Main"

	args "--changeLogFile=changelog.yml"
	args "--url=${databaseUrl}"
	args "--driver=${jdbcDriver}"
	args "--username=${userName}"
	args "--password=${password}"
	args "--logLevel=warning"
	args "update"
}