plugins {
	id "java-library"
}

description = "Core"

// =====================
// JAR Configuration
// =====================
jar {
	archiveBaseName = "Core"
	enabled = true
}

bootJar {
	enabled = false
}

// =====================
// Source Sets
// =====================
sourceSets {
	testUtils
}

// =====================
// Configurations
// =====================
configurations {
	testUtils.extendsFrom(testRuntimeClasspath)
}

// =====================
// Tasks
// =====================
tasks.register("testUtilsJar", Jar) {
	archiveClassifier.set("testUtils")
	from sourceSets.testUtils.output
}

// =====================
// Artifacts
// =====================
artifacts {
	testUtils(tasks.named("testUtilsJar"))
}

// =====================
// Dependencies
// =====================
dependencies {
	// Main
	implementation libs.hazelcast
	implementation libs.hazelcast.spring
	implementation libs.hazelcast.kubernetes
	api libs.spring.boot.starter.hateoas
	api libs.spring.boot.starter.data.jpa
	api libs.spring.boot.starter.web
	implementation libs.spring.boot.starter.actuator
	implementation libs.spring.cloud.starter.sleuth
	implementation libs.spring.metrics
	implementation libs.micrometer.prometheus
	api libs.spring.context.support
	implementation libs.hibernate
	implementation libs.evo.inflector
	implementation libs.commons.validator
	implementation libs.commons.lang
	api libs.jakarta.mail
	api libs.jakarta.annotation
	api libs.thymeleaf
	implementation libs.spring.ldap.core
	implementation libs.spring.security.web
	implementation libs.spring.security.config
	api libs.guava
	implementation libs.libphonenumber
	implementation libs.firebase.admin

	// Test
	testImplementation libs.test.spring.boot.starter.test
	testImplementation libs.test.mockito.junit.jupiter
	testImplementation libs.test.jmockit
	testImplementation libs.test.junit.jupiter
	testImplementation libs.test.hamcrest.jdk8.time
	testImplementation libs.test.equalsverifier

	// Test Utils
	testUtilsImplementation libs.test.groovy
	testUtilsImplementation libs.httpmime
	testUtilsImplementation libs.test.spock.core // Spock dependencies
}

// =====================
// Test Configuration
// =====================
test {
	enableAssertions = true
	jvmArgs "-javaagent:${classpath.find { it.name.contains("jmockit") }?.absolutePath}"
	useJUnitPlatform()
}
