name: Deploy
description: Deploy Yona to a server
inputs:
  host-name:
    description: 'The name of the host to deploy to'
    required: true
  ssh-user-name:
    description: 'The SSH user name'
    required: true
  ssh-key:
    description: 'The SSH key'
    required: true
  proxy-host-name:
    description: 'The name of the proxy host to go through'
    required: false
  proxy-ssh-user-name:
    description: 'The user name on the proxy host'
    required: false
  proxy-ssh-key:
    description: 'The SSH key for the proxy host'
    required: false
  kube-config:
    description: 'Path to the kubeconfig file'
    required: true
  kube-context:
    description: 'Kubernetes context to operate in'
    required: true
  kube-namespace:
    description: 'Kubernetes namespace to operate in'
    required: false
    default: yona
  helm-release:
    description: 'Helm release to create or upgrade'
    required: false
    default: yona
  build-id:
    description: 'The build id to deploy'
    required: true
  repo-number:
    description: 'The number of the GitLab repo containing the values'
    required: true
  helm-values-path:
    description: 'The path to the values YAML file in the GitLab repo'
    required: true
  gitlab-token:
    description: 'The token of the GitLab repo'
    required: true

runs:
  using: "composite"
  steps:
    - name: Install Yona
      uses: appleboy/ssh-action@v0.1.4
      with:
        host: ${{ inputs.host-name }}
        username: ${{ inputs.ssh-user-name }}
        key: ${{ inputs.ssh-key }}
        proxy_host: ${{ inputs.proxy-host-name }}
        proxy_username: ${{ inputs.proxy-ssh-user-name }}
        proxy_key: ${{ inputs.proxy-ssh-key }}
        script_stop: true
        script: |
          set -x
          # TODO BASH_XTRACEFD=1 # Send script tracing to stdout
          helm repo update
          export KUBECONFIG=${{ inputs.kube-config }} # Used in Helm and wait-for-services.sh
          export NAMESPACE=${{ inputs.kube-namespace }} # Used in wait-for-services.sh
          export VALUES_PATH=${{ inputs.helm-values-path }}
          ENCODED_VALUES_PATH=${VALUES_PATH//\//\%2F} # Replace / with %2F throughout the string
          kubectl config use-context ${{ inputs.kube-context }}
          URL="https://git.ops.yona.nu/api/v4/projects/${{ inputs.repo-number }}/repository/files/${ENCODED_VALUES_PATH}/raw?ref=master"
          wget --no-verbose --header='PRIVATE-TOKEN: ${{ inputs.gitlab-token }}' --output-document=- ${URL} | helm upgrade --install --values - --namespace ${{ inputs.kube-namespace }} --version 1.2.${{ inputs.build-id }} ${{ inputs.helm-release }} yona/yona
          wget --no-verbose --output-document=- https://raw.githubusercontent.com/yonadev/yona-server/build-${{ inputs.build-id }}/scripts/wait-for-services.sh | bash
